@model BLL.Models.ViewModels.FavorsWithPaginationVm.PaginationConfiguration

@{
    var solutionsCount = Model.CountFavorSolutions;
    uint countPages = solutionsCount % 10 == 0 ? solutionsCount / 10 : solutionsCount / 10 + 1;
    <script>
        var countPages = @countPages;
    </script>
}
@if (countPages <= 5 && countPages != 1)
{
    <div class="d-flex justify-content-center">
        <div class="nav_menu">
            @for (int i = 1; i <= countPages; i++)
            {
                <button class="nav_menu_button" id="selector" value="@i">@i</button>
            }
        </div>
    </div>
}
else if(countPages > 5)
{
    <div class="d-flex justify-content-center">
        <div class="nav_menu">
            @if(@Model.FavorSolutionsOffset > 0)
            {
            <button class="nav_menu_button" id="previousPages"> &lt;&lt; </button>
            }
            
            @for (uint i = @Model.FavorSolutionsOffset + 1; i <= Math.Min(countPages ,@Model.FavorSolutionsOffset + 5); i++)
            {
                <button class="nav_menu_button" id="selector" value="@i">@i</button>
            }
            
            @if (Model.FavorSolutionsOffset < countPages)
            {
                <button class="nav_menu_button" id="nextPages"> &gt;&gt; </button>
            }
        </div>
    </div>
}